#!/usr/bin/env ruby

BEGIN {
	require 'rbconfig'
	require 'pathname'
	basedir = Pathname.new( __FILE__ ).dirname.parent

	libdir = basedir + "lib"
	extdir = libdir + Config::CONFIG['sitearch']

	$LOAD_PATH.unshift( basedir.to_s ) unless $LOAD_PATH.include?( basedir.to_s )
	$LOAD_PATH.unshift( libdir.to_s ) unless $LOAD_PATH.include?( libdir.to_s )
	$LOAD_PATH.unshift( extdir.to_s ) unless $LOAD_PATH.include?( extdir.to_s )
}

require 'rspec'

require 'spec/lib/helpers'

require 'redleaf'
require 'redleaf/graph'
require 'redleaf/parser/ntriples'
require 'redleaf/parser/rdfxml'

#####################################################################
###	C O N T E X T S
#####################################################################
describe "W3C RDF Test Suite: Parser Tests" do
	include Redleaf::SpecHelpers

	BASE_URI = 'http://www.w3.org/2000/10/rdf-tests/rdfcore/testSchema#'

	before( :all ) do
		@specdir = Pathname.new( __FILE__ ).expand_path.dirname.relative_path_from( Pathname.getwd )
		@datadir = @specdir + 'data/w3ctests'
	end

	before( :each ) do
		setup_logging( :fatal )
		@nt_parser = Redleaf::NTriplesParser.new
		@rdfxml_parser = Redleaf::RDFXMLParser.new
	end
	
	after( :each ) do
		reset_logging()
	end
	

<% examples.flatten.each do |example| %>
<% example.description.each_line do |descline| %>
<% next if descline =~ /^\s*$/ %>
	# <%= descline.strip.chomp %>
<% end %>
<% if example.is_negative_test? %>
	it "correctly holds the document '<%= example.input_doc %>' to be in error" do
 		inputfile = @datadir + '<%= example.input_doc %>'
		inputuri = "file:#{inputfile}"
		expect {
			@rdfxml_parser.parse( inputfile.read, inputuri )
		}.to raise_error( Redleaf::ParseError )
	end
<% else %>
	it "correctly parses the document '<%= example.input_doc %>'" do
		inputfile = @datadir + '<%= example.input_doc %>'
		inputuri = "file:#{inputfile}"
 		input_model = @rdfxml_parser.parse( inputfile.read, inputuri )

		outputfile = @datadir + '<%= example.output_doc %>'
		output_model = @nt_parser.parse( outputfile.read )

		input_model.should === output_model
	end
<% end %>

<% end %>

end

# vim: set nosta noet ts=4 sw=4:
